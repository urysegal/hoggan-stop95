CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C*      THIS ROUTINE COMPUTES THE TWO-CENTER EXCHANGE INTEGRALS      *C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      SUBROUTINE EXCH21(NEPSIL, NTORB,NSUM, LM123, NORB1,NORB2,
     $           NLMA,NLMB, ZETAA,ZETAB, ZETAM, AB,THETAB,PHIAB, FATIMA)
      IMPLICIT REAL*8(A-H, O-Z)
      COMPLEX*16 OUIZA
      INCLUDE "../lib95/SIZE.INCL"
      INCLUDE "../lib95/CONST.INCL"

      DIMENSION NLMA(*),NLMB(*), ZETAA(*),ZETAB(*), FATIMA(*)

      DIMENSION YLMAB(0:((LDEV+1)*(LDEV+2))/2), ARVAL(0:LDEV),
     $                                    RADAR((LMDMAX+1)*(L1MAX+1)**6)

      DIMENSION ARGNT1((L2MAX+1)*(2*L2MAX+1)), ARGNT5(LDEV+1),
     $          ARGNT3((L4MAX+1)*(2*L2MAX+1)), ARGNT6(LDEV+1),
     $          ARGNT2((L1MAX+1)*(L2MAX+1)*(2*L2MAX+1)),
     $          ARGNT4((L3MAX+1)*(L4MAX+1)*(2*L4MAX+1))

      DIMENSION INX(7), EPS((LDEV+1)*(LDEV+1))

      DIMENSION OUIZA(20,20,20,20)

      COMMON/FACT0/FACT(0:30)
      COMMON/DFACT/DFAC(0:100)
      COMMON/GLE01/RLEG01(L1_3)
      COMMON/GLE02/RLEG02(L4_6)
      COMMON/BESS0/BESF01(2*LTOT6)
      COMMON/X4POW/X4NL(10*LTOT6)
      COMMON/GLAE0/RLEAG0(LMHERM), ISP
      COMMON/XROOTS/ROOTS(LEA05*LEA06), ISQ
      COMMON/COMV00/VLRAD(LEA05*(LMDMAX+1)*(L1MAX+1)**3)
      COMMON/COMG00/GEGIN0(LMHERM*LMHERM*(LMDMAX+L1MAX+L2MAX+1))
      COMMON/BESHER/HEREX(LTOT6*LMHERM), BESS01(LTOT6*(LDEV+1))
      COMMON/EXPO/SEXP(LEA05*LEA06), SEXP1(LEA05)
      COMMON/INTEGN/NINT


c     WRITE(*, 99)LEG07,LAG05, LEG08,LAG06,LMDMAX, NEPSIL
c99   FORMAT('INTEGRATION PARAMETERS :', 5(I3, 2X), 'EPSILON : ', I3)

C.... COMPUTATION OF THE SPHERICAL HARMONICS
      call cpu_time(tin)
      CALL YLMV0(THETAB, YLMAB)

C.... COLLECTING THE ROOTS OF THE DOUBLE INTEGRAL (I.E. OVER R1 AND R2)

      CALL DUMMY2(ZETAM, AB)

C.... COMBINING THE GIVEN SET OF ORBITALS

      DO 5 NAT2=1, NORB2
       JST   = 5*(NAT2-1)
       NO2   = NLMB(JST+2)
       N2    = NLMB(JST+3)
       L2    = NLMB(JST+4)
       M2    = NLMB(JST+5)
       ZETA2 = ZETAB(NAT2)

       LMDL12 = LMDMAX+LM123+L2+1
       CALL GEGEN5(LMDL12, N2-L2, ZETA2, AB, RLEG01, RLEG02, RLEAG0,
     $                                      BESF01, ROOTS, X4NL, GEGIN0)
      DO 5 NAT1=1, NORB1
       IST   = 5*(NAT1-1)
       NO1   = NLMA(IST+2)
       N1    = NLMA(IST+3)
       L1    = NLMA(IST+4)
       M1    = NLMA(IST+5)
       ZETA1 = ZETAA(NAT1)

C.... COMPUTATION OF THE TWO-CENTER CHARGE DISTRIBUTION POTENTIAL

      CALL TCCDP(LM123, N1,L1, N2,L2, ZETA1,ZETA2, AB, RLEG01,
     $                              RLEG02, BESF01, X4NL, RLEAG0, VLRAD)

C.... THE ORBITALS (3) AND (4)

      DO 5 NAT3=1, NORB1
       KST   = 5*(NAT3-1)
       NO3   = NLMA(KST+2)
       N3    = NLMA(KST+3)
       L3    = NLMA(KST+4)
       M3    = NLMA(KST+5)
       ZETA3 = ZETAA(NAT3)

       CALL EXPOS(ZETA3, RLEAG0, LEA05, SEXP1)

      DO 5 NAT4=NAT2, NORB2
       LST   = 5*(NAT4-1)
       NO4   = NLMB(LST+2)
       N4    = NLMB(LST+3)
       L4    = NLMB(LST+4)
       M4    = NLMB(LST+5)
       ZETA4 = ZETAB(NAT4)

C.... COMPUTATION OF THE COEFFICIENTS OF THE SOLID SPHERICAL HARMONICS
C.... ADDITION AND MULTIPLICATION THEOREMS

      CALL FUSED(DFAC, L1,M1, L2,M2, AB,YLMAB, ARGNT1, ARGNT2)
      CALL FUSED(DFAC, L3,M3, L4,M4, AB,YLMAB, ARGNT3, ARGNT4)

C.... COMPUTATION OF THE RADIAL PART INVOLVED IN THE TWO-CENTER EXCHANGE INTEGRALS

      CALL RADP(L1,L2, N3,L3,M3, N4,L4,M4, ZETA3,ZETA4, AB, ZETAM,
     $                       RLEG01,RLEG02, BESF01, X4NL, RLEAG0, RADAR)

C.... THE GLOBAL PHI ANGLE

      ANGLE  = ((M2+M4) - (M1+M3))*PHIAB
      COSINE = DCOS(ANGLE)
      SINE   = DSIN(ANGLE)

C.... THE NORMALIZATION CONSTANTS

      A1 = (2.D0*ZETA1)**N1 * DSQRT((2.D0*ZETA1)/FACT(2*N1))
      A2 = (2.D0*ZETA2)**N2 * DSQRT((2.D0*ZETA2)/FACT(2*N2))
      A3 = (2.D0*ZETA3)**N3 * DSQRT((2.D0*ZETA3)/FACT(2*N3))
      A4 = (2.D0*ZETA4)**N4 * DSQRT((2.D0*ZETA4)/FACT(2*N4))

      CSTE =  DFAC(L2)*DFAC(L4) * A1*A2*A3*A4
     $       * (-AB)**(L2+L4)

C.... INITIALISATION OF THE WORKING ARRAY

      CALL RAZ0(ARVAL, 0, LMDMAX)

C.... INITIALIZATION OF THE INDEXING ARRAY

      CALL RAZ1(INX, 1, 7)

C.... COMPUTATION OF THE TWO-CENTER EXCHANGE INTEGRALS

      EXCH = 0.D0

      DNUL = -1

      DO 10 L=0, LMDMAX
       DNUL   = - DNUL
       DNUM   = - DNUL
       INX(1) = INX(1)+INX(2)+INX(3)+INX(4)+INX(5)+INX(6)+INX(7)
       AUX1   = 1.D0/DBLE(L+L+1)
      DO 10 M=-L, L
       DNUM = - DNUM
       CALL RAZ1(INX, 2, 7)
       K1 = 0
       K2 = 0
      DO 10 LP2=0, L2
       INX(2) = INX(2)+INX(3)+INX(4)+INX(5)+INX(6)+INX(7)
       MAXMP2 = MAX(-LP2, -L2+LP2+M2)
       MINMP2 = MIN(LP2, L2-LP2+M2)
ccc    IF(MAXMP2 .gt. MINMP2)THEN
ccc     WRITE(*, *)'EXCH2 '
ccc     STOP
ccc    ENDIF
      DO 10 MP2=MAX(-LP2, -L2+LP2+M2), MIN(LP2, L2-LP2+M2)
       K1   = K1 + 1
       AUX2 = ARGNT1(K1)
       CALL RAZ1(INX, 3, 7)
      DO 10 LP12=IABS(L1-LP2), L1+LP2, 2
       K2     = K2 + 1
       AUX3   = ARGNT2(K2)
       INX(3) = INX(3)+INX(4)+INX(5)+INX(6)+INX(7)
       CALL RAZ1(INX, 4, 7)
       IF(AUX3 .NE. 0.D0)THEN
	CALL GAUNT(LP12, MP2-M1, L, M, LMIN,LMAX, M12, NGAUNT, ARGNT5)
       ENDIF
       KO1 = 0
      DO 10 LMD1=IABS(L-LP12), L+LP12, 2
       IF(LMD1 .GE. LMIN)THEN
	KO1    = KO1 + 1
	NYL1   = (LMD1*(LMD1+1))/2 + IABS(M-(MP2-M1))
	MUPW   = (M-(MP2-M1) - IABS(M-(MP2-M1)))/2
	AUX4   = (-1)**MUPW * ARGNT5(KO1) * YLMAB(NYL1)
       ELSE
	AUX4   = 0.D0
       ENDIF
       INX(4) = INX(4)+INX(5)+INX(6)+INX(7)
       CALL RAZ1(INX, 5, 7)
       K3 = 0
       K4 = 0
      DO 10 LP4=0, L4
       INX(5) = INX(5)+INX(6)+INX(7)
      DO 10 MP4=MAX(-LP4, -L4+LP4+M4), MIN(LP4, L4-LP4+M4)
       K3     = K3 + 1
       AUX5   = ARGNT3(K3)
       CALL RAZ1(INX, 6, 7)
      DO 10 LP34=IABS(L3-LP4), L3+LP4, 2
       K4     = K4 + 1
       AUX6   = ARGNT4(K4)
       INX(6) = INX(6)+INX(7)
       CALL RAZ1(INX, 7, 7)
       IF(AUX6 .NE. 0.D0)THEN
	CALL GAUNT(L,M, LP34,M3-MP4, LMIN1,LMAX1, MP12, NGAUNT, ARGNT6)
       ENDIF
       KO2 = 0
      DO 10 LMD2=IABS(L-LP34), L+LP34, 2
       INX(7) = INX(7) + 1
       INDIC  = INX(1)+INX(2)+INX(3)+INX(4)+INX(5)+INX(6)+INX(7)
       IF(LMD2 .GE. LMIN1)THEN
	NYL2   = (LMD2*(LMD2+1))/2 + IABS(M+(MP4-M3))
	KO2    = KO2 + 1
	MUPW   = (M+(MP4-M3) - IABS(M+(MP4-M3)))/2
	AUX7   = (-1)**MUPW * ARGNT6(KO2) * YLMAB(NYL2)
       ELSE
	AUX7   = 0.D0
       ENDIF
       ARVAL(L) = ARVAL(L) + DNUM*AUX1*AUX2*AUX3*AUX4*AUX5*AUX6*AUX7*
     $                                                      RADAR(INDIC)
 10   CONTINUE

C.... ACCELERATING THE CONVERGENCE OF THE SERIES REPRESENTATION

      EXCH2P = 0.D0
c
c      DO 26 I=0, LMDMAX
c       EXCH2P = EXCH2P + C3*CSTE/AB * ARVAL(I)
c 26   CONTINUE
      CALL ACCEL(NEPSIL, ARVAL, LMDMAX,C3*CSTE/AB, EXCH2P)
c      EXCH2P = C3 *EXCH2P
c      write(*,*)"exch2", exch2p,exch2p1,exch2p-exch2p1
      EXCH2R = COSINE * EXCH2P
      EXCH2I = SINE   * EXCH2P

      WRITE(*, 1) NO1,NO2,NO3,NO4, EXCH2R,  EXCH2I

      OUIZA(NAT1,NAT2,NAT3,NAT4) = DCMPLX(EXCH2R,  EXCH2I)
      OUIZA(NAT3,NAT4,NAT1,NAT2) = OUIZA(NAT1,NAT2,NAT3,NAT4)

      NINT = NINT + 1

 5    CONTINUE
 1    FORMAT(4(I2, 1X), 2(D10.4, 1X))
      call cpu_time(tout)
c      write(*,*)"time",tout-tin
      CALL REAL04(NORB1,NORB2, NLMA,NLMB,
     $     NTORB, NSUM, OUIZA, FATIMA)

      RETURN
      END
