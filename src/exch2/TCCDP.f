CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C* THIS ROUTINE RETURNS THE RADIAL PART INVOLVED IN THE TWO-CENTER   *C
C* CHARGE DISTRIBUTION POTENTIAL.                                    *C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      SUBROUTINE TCCDP(LM123, N1,L1, N2,L2, ZETA1,ZETA2, AB, RLEG01,
     $                              RLEG02, BESF01, X4NL, RLEAG0, VLRAD)

      IMPLICIT REAL*8 (A-H, O-Z)
      INCLUDE "../lib95/SIZE.INCL"
      DIMENSION RLEG01(*), RLEG02(*), BESF01(*), X4NL(*), RLEAG0(*),
     $          VLRAD(*)
      COMMON/BESHER/HEREX(LTOT6*LMHERM), BESS01(LTOT6*(LDEV+1))
      COMMON/EXCH00/ZETA1P, R2, N1P, LP2, L, LMD1, LMDL12, IO, ISTR
      COMMON/XROOTS/ROOTS(LEA05*LEA06), ISP
      COMMON/COMG00/GEGIN0(LMHERM*LMHERM*(LMDMAX+L1MAX+L2MAX+1))
      COMMON/R1R2P/R12POW(LEA05*LEA06*(LMDMAX+1)), RR2
      COMMON/R1POW/R1PUIS((L1MAX+L2MAX+2)*LEA05*LEA06)
      COMMON/R1SQR/R1SQRT(LEA05*LEA06)
      COMMON/EXPO/SEXP(LEA05*LEA06), SEXP1(LEA05)
      EXTERNAL TCCDP0, TCCDP1, FGLA06

C.... PASSAGE TO A COMMON

      ZETA1P = ZETA1
      N1P    = N1
      LMDL12 = LMDMAX+LM123+L2+1

C.... COLLECTING THE ROOTS OF THE GAUSS QUADRATURE FOR THE POTENTIAL

      DO 5 I=1, LEA05
       R2   = RLEAG0(I)
       RR2  = R2
       ISP  = (I-1)*LEA06 + LEG08 + LEG09
       XXXX = DGLGQ(FGLA06, DMAX1(AB, R2), ZETA1+ZETA2, LAG06)
 5    CONTINUE

C.... COMPUTATION OF THE EXPONENTIAL DEPENDING ON ZETA1 AND R1

      DO 20 I=1, LEA05*LEA06
       R1      = ROOTS(I)
       SEXP(I) = DEXP(-ZETA1*R1)
 20   CONTINUE

C.... COMPUTATION OF THE SQUARE ROOTS INVOLVED IN TCCDP1 ROUTINE (0,+\INFTY)

      DO 25 J=1, LEA05
      DO 25 K=1, LAG06
       I = (J-1)*LEA06 + LEG08 + LEG09 + K
       R1SQRT(I) = 1.D0/DSQRT(ROOTS(I))
 25   CONTINUE

C.... COMPUTATION OF THE POWERS OF R1 INOLVED IN THE TCCDP1 ROUTINE

      DO 30 LMD=1, N1+L2
       INOW = (LMD-1)*LEA05*LEA06
       INEX = INOW + LEA05*LEA06
      DO 30 J=1, LEA05
      DO 30 K=1, LAG06
       I = (J-1)*LEA06 + LEG08 + LEG09 + K
       R1PUIS(INEX+I) = R1PUIS(I) * R1PUIS(INOW+I)
 30   CONTINUE

C.... COMPUTATION OF THE POWERS OF THE TERMS (R2/R1) INVOLVED IN TCCDP1

      DO 35 LMD=1, LMDMAX
       INOW = (LMD-1)*LEA05*LEA06
       INEX = INOW + LEA05*LEA06
      DO 35 J=1, LEA05
      DO 35 K=1, LAG06
       I = (J-1)*LEA06 + LEG08 + LEG09 + K
       R12POW(INEX+I) = R12POW(LEA05*LEA06+I) * R12POW(INOW+I)
 35   CONTINUE

C.... COMPUTATION OF THE HERMIT POLYNOMIALS INVOLVED IN THE GEGENBAUER A. THEO.
C.... THE FOLLOWING VALUES DEPEND ON THE PARAMETERS OF THE TWO STO's (1) AND (2)
C.... AND OF COURSE THE ROOTS OF THE GAUSS-LAGUERRE QUADRATURE (LAG06 ROOTS).

      NONE = -1
      INP  = 1
      CALL ABIN02(ZETA2, AB, NONE, RLEG01,L1_3, RLEG02,L4_6,
     $                    RLEAG0,INP,LEA05, BESF01, X4NL, HEREX, BESS01)

      IN = LEG08+LEG09+1

      DO 10 I=1, LEA05
       ISIT = (I-1)*LEA06
       CALL HERMIT(ZETA2, AB, N2-L2, RLEG01,L1_3, RLEG02,L4_6,
     $              ROOTS(ISIT+1),IN,LEA06, BESF01, X4NL, HEREX, BESS01)
      DO 10 LMD=0, LMDL12-1
       IND1 = 1
      DO 10 J=IN, LEA06
       R1 = ROOTS(ISIT+J)
       IND2 = LMD+1
       CALL BAD01(IND1, IND2, ZETA2, AB, R1, N2-L2, LMD, XYINT)
       INDEX         = (I-1)*LMDL12*LEA06 + LMD*LEA06 + J
       GEGIN0(INDEX) = XYINT
 10   CONTINUE

C.... COMPUTATION OF THE RADIAL PART OF THE THE T.C.C.D.P

      INDEX = 1

      DO 15 L=0, LMDMAX
      DO 15 LP2=0, L2
      DO 15 LP12=IABS(L1-LP2), L1+LP2, 2
      DO 15 LMD1=IABS(L-LP12), L+LP12, 2
      DO 15 IO=1, LEA05
       R2           = RLEAG0(IO)
       ISTR         = 0
       XINT1        = DGLNQ(TCCDP0, 0.D0, DMIN1(AB, R2), LEG08)
       ISTR         = ISTR + LEG08
       IF(AB .LT. R2)THEN
	XINT2       = DGLNQ(TCCDP0, AB, R2, LEG09)
       ELSE
	XINT2       = DGLNQ(TCCDP1, R2, AB, LEG09)
       ENDIF
       ISTR         = ISTR + LEG09
       XINT3        = DGLGQ(TCCDP1, DMAX1(AB, R2), ZETA1+ZETA2, LAG06)
       VLRAD(INDEX) = XINT1 + XINT2 + XINT3
       INDEX        = INDEX + 1
 15   CONTINUE


      RETURN
      END




CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C* THIS SUBROUTINE COMPUTES THE RADIAL INTEGRAL OF THE T.C.C.D.P OVER*C
C* THE RANGE [0, R2].                                                *C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      SUBROUTINE TCCDP0(T, Y, N)
      IMPLICIT REAL*8(A-H, O-Z)
      INCLUDE "../lib95/SIZE.INCL"
      DIMENSION T(*), Y(*)
      COMMON/EXCH00/ZETA1, R2, N1, LP2, L, LMD1, LMDL12, IO, ISTR
      COMMON/COMG00/GEGIN0(LMHERM*LMHERM*(LMDMAX+L1MAX+L2MAX+1))
      COMMON/R1R2P/R12POW(LEA05*LEA06*(LMDMAX+1)), RR2
      COMMON/R1POW/R1PUIS((L1MAX+L2MAX+2)*LEA05*LEA06)
      COMMON/R1SQR/R1SQRT(LEA05*LEA06)
      COMMON/EXPO/SEXP(LEA05*LEA06), SEXP1(LEA05)


      INDO = (IO-1)*LMDL12*LEA06 + LMD1*LEA06 + ISTR
      INDX = L*LEA05*LEA06 + (IO-1)*LEA06 + ISTR
      INDY = (N1+LP2-1)*LEA05*LEA06 + (IO-1)*LEA06 + ISTR
      INDZ = (IO-1)*LEA06 + ISTR

      DO 5 I=1, N
       Y(I) = R1SQRT(INDZ+I) * R1PUIS(INDY+I) * R12POW(INDX+I) *
     $                                     SEXP(INDZ+I) * GEGIN0(INDO+I)
 5    CONTINUE
      RETURN
      END



CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C* THIS SUBROUTINE COMPUTES THE RADIAL INTEGRAL OF THE T.C.C.D.P OVER*C
C* THE RANGE [R2, +\INFINTY[.                                        *C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      SUBROUTINE TCCDP1(T, Y, N)
      IMPLICIT REAL*8(A-H, O-Z)
      INCLUDE "../lib95/SIZE.INCL"
      DIMENSION T(*), Y(*)
      COMMON/EXCH00/ZETA1, R2, N1, LP2, L, LMD1, LMDL12, IO, ISTR
      COMMON/COMG00/GEGIN0(LMHERM*LMHERM*(LMDMAX+L1MAX+L2MAX+1))
      COMMON/R1R2P/R12POW(LEA05*LEA06*(LMDMAX+1)), RR2
      COMMON/R1POW/R1PUIS((L1MAX+L2MAX+2)*LEA05*LEA06)
      COMMON/R1SQR/R1SQRT(LEA05*LEA06)
      COMMON/EXPO/SEXP(LEA05*LEA06), SEXP1(LEA05)


      INDO = (IO-1)*LMDL12*LEA06 + LMD1*LEA06 + ISTR
      INDX = L*LEA05*LEA06 + (IO-1)*LEA06 + ISTR
      INDY = (N1+LP2-1)*LEA05*LEA06 + (IO-1)*LEA06 + ISTR
      INDZ = (IO-1)*LEA06 + ISTR

      DO 5 I=1, N
       R1   = T(I)
C      Y(I) = R1SQRT(INDZ+I) * R1PUIS(INDY+I) * R12POW(INDX+I) *
C    $                                     SEXP(INDZ+I) * GEGIN0(INDO+I)
       Y(I) = R1SQRT(INDZ+I) * R1PUIS(INDY+I) * (R2/R1)**L *
     $                                     SEXP(INDZ+I) * GEGIN0(INDO+I)
 5    CONTINUE

      RETURN
      END

