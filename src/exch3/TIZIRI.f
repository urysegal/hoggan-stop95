CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C*     THIS SUBROUTINE RETURNS THE RADIAL PART FOR THE R.T.C.C.D.P       *C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      SUBROUTINE TIZIRI(INDEX, ZETA1,ZETA2, AB,RMIN,RMAX, RLEAG0, VL)
      IMPLICIT REAL*8 (A-H, O-Z)
      INCLUDE "../lib95/SIZE.INCL"
      DIMENSION RLEAG0(*), VL(*)
      COMMON/EXCH03/ZETA1P, R2, N1P, LP2, L, LMD1, LMDL12, IO, ISTR
      COMMON/COMG00/GEGIN0(LMHERM*LMHERM*(LMDMAX+L1MAX+L2MAX+1))
      EXTERNAL TCCDP3, TCCDP4

C.... FIRST  CASE 0 ------> R2 ------> RMIN ------> RMAX ------> +\INFTY

      DO 5 IO=1, LEG10
       R2        = RLEAG0(IO)
       ISTR      = 0
       XINT1     = DGLNQ(TCCDP3, 0.D0, R2, LEG12)
       ISTR      = ISTR + LEG12
       XINT2     = DGLNQ(TCCDP4, R2, RMIN, LEG13)
       ISTR      = ISTR + LEG13
       XINT3     = DGLNQ(TCCDP4, RMIN, RMAX, LEG14)
       ISTR      = ISTR + LEG14
       XINT4     = DGLGQ(TCCDP4, RMAX, ZETA1+ZETA2, LAG08)
       VL(INDEX) = XINT1 + XINT2 + XINT3 + XINT4
       INDEX        = INDEX + 1
 5    CONTINUE

C.... SECOND CASE 0 ------> RMIN ------> R2 ------> RMAX ------> +\INFTY
C.... IF RMIN EQUALS RMAX, THE PROGRAM JUMPS TO THE THIRD CASE. HOWEVER,
C.... THE VARIABLE INDEX SHOULD BE UPTADED CORRECTLY (AS IF THE SECOND CASE
C.... HAS BEEN TREATED.

      JNDEX = INDEX

      IF(RMIN .EQ. RMAX)GOTO 110

      DO 10 IO=LEG10+1, LEG10+LEG11
       R2        = RLEAG0(IO)
       ISTR      = 0
       XINT1     = DGLNQ(TCCDP3, 0.D0, RMIN, LEG12)
       ISTR      = ISTR + LEG12
       XINT2     = DGLNQ(TCCDP3, RMIN, R2, LEG13)
       ISTR      = ISTR + LEG13
       XINT3     = DGLNQ(TCCDP4, R2, RMAX, LEG14)
       ISTR      = ISTR + LEG14
       XINT4     = DGLGQ(TCCDP4, RMAX, ZETA1+ZETA2, LAG08)
       VL(INDEX) = XINT1 + XINT2 + XINT3 + XINT4
       INDEX        = INDEX + 1
 10   CONTINUE
       NNN = 1

C.... THIRD  CASE 0 ------> RMIN ------> RMAX ------> R2 ------> +\INFTY

 110  CONTINUE
      INDEX = JNDEX + LEG11

      DO 15 IO=LEA07-LAG07+1, LEA07
       R2        = RLEAG0(IO)
       ISTR      = 0
       XINT1     = DGLNQ(TCCDP3, 0.D0, RMIN, LEG12)
       ISTR      = ISTR + LEG12
       XINT2     = DGLNQ(TCCDP3, RMIN, RMAX, LEG13)
       ISTR      = ISTR + LEG13
       XINT3     = DGLNQ(TCCDP3, RMAX, R2, LEG14)
       ISTR      = ISTR + LEG14
       XINT4     = DGLGQ(TCCDP4, R2, ZETA1+ZETA2, LAG08)
       VL(INDEX) = XINT1 + XINT2 + XINT3 + XINT4
       INDEX        = INDEX + 1
 15   CONTINUE


      RETURN
      END

